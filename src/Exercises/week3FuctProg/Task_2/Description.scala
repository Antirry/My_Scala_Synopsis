package Exercises.week3FuctProg.Task_2

class Description extends App {
/*
Еще немного поработаем с серверами. Только теперь попрактикуемся отлавливать исключения.



Мы знаем, что:

1. нам доступно значение хоста (host) и порт (port)
2. есть сервер, который дает доступ к HTML странице
3. вам доступен метод render(page), выводящий содержимое страницы на экран
4. для доступа к HTML странице по заданному url в классе Connection описан метод get(url: String).
   Если действие успехом не увенчалось, выбрасывается исключение, сообщающее о том, что Your Connection was Interrupted
   сам процесс соединения с сервером описан в объекте HttpService, в методе apply (вот только сама имплементация от вас скрыта)
5. на вход apply подается host и port
6. если подключиться к серверу не удалось, срабатывает исключение с сообщением Someone else took the port


Ваша цель: установить соединение с сервером и получить HTML страницу, содержимое которой следует вывести на экран.
 Или ничего не вывести, если соединение установить не удалось.
  Главное здесь - разобраться с возможными исключениями, чтобы они нигде не выскочили.

  Все - как в реальности: есть интерфейс, реализация которого от вас скрыта, и есть задача, которую нужно решить. Дело за вами.
 */


}




class Description_Task_1 extends App {

/*

Если схематично представить код, который требуется написать, в привычном нам стиле, то выглядеть это будет как-то так:

try {
  // попытка соединиться с сервером
  try {
    // попытка получить html страницу
  } catch (exception) {
    // уведомление об исключении
  }
} catch (exception) {
  // уведомление об исключении
}

Метод safeConnection , который получает хост и порт

def safeConnection(host: Option[String], port: Option[String]): Try[Connection] = {
  Try HttpService.apply(host, port)

}
 */

}


object Description_Task_2 extends App {

/*

  Для того, чтобы разместить содержимое html страницы на экране, вам предоставляется метод render.

  Как думаете, что позволит должным образом применить render к полученной от сервера html странице?

  Правильный ответ:
    - foreach
    Хотя map аналогичен foreach, с методами, возвращающими Unit значение, используем именно foreach

  Ошибка:
    - map
    Учитывайте, что метод render возвращает Unit значение

 */

}